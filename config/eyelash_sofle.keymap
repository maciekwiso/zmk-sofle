#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    flavor = "tap-preferred";
};

/ {

    macros {
        win_choose: win_choose {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 2 &kp LGUI>
                , <&macro_pause_for_release>
                , <&macro_release &mo 2 &kp LGUI>
                ;
        };

        blocks: blocks {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LEFT_ALT>
                , <&macro_tap &kp END>
                , <&macro_wait_time 1000>
                , <&macro_tap &kp ENTER>
                , <&macro_release &kp LCTRL &kp LEFT_ALT>
                ;
        };

        plappr: plappr {
            compatible = "zmk,behavior-macro";
            wait-ms = <30>;
            tap-ms = <20>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp P &kp L &kp E &kp A &kp S &kp E &kp SPACE &kp A &kp P &kp P &kp R &kp O &kp V &kp E &kp SPACE>
                , <&macro_tap &kp LC(V)>
                , <&macro_wait_time 30>
                , <&macro_tap &kp ENTER>
                ;
        };

        sprlab: sprlab {
            compatible = "zmk,behavior-macro";
            wait-ms = <30>;
            tap-ms = <20>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp S &kp P &kp R &kp I &kp N &kp G &kp DOT &kp C &kp L &kp O &kp U &kp D &kp DOT &kp C &kp O &kp N &kp F &kp I &kp G &kp DOT &kp L &kp A &kp B &kp E &kp L &kp EQUAL>
                ;
        };

        tildsl: tildsl {
            compatible = "zmk,behavior-macro";
            wait-ms = <30>;
            tap-ms = <30>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp TILDE &kp FSLH>
                ;
        };
    };

    behaviors {
        mtwc: mtwc {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&win_choose>, <&kp>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LG(M)>, <&blocks>, <&plappr>;
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE   &kp N1           &kp N2        &kp N3        &kp N4         &kp N5  &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0      &td0
&kp TAB     &kp Q            &kp W         &kp E         &mt INS R      &kp T   &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P       &kp LBKT
&lt 3 ESC   &mtwc 0 A        &mt LSHFT S   &mt LCTRL D   &mt LEFT_ALT F &kp G   &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &mt LC(Z) Z      &mt LC(X) X   &mt LC(C) C   &mt LC(V) V    &kp B   &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH    &kp LGUI
&kp C_MUTE  &tog 3           &mo 4         &kp BACKSPACE &kp SPACE &kp DELETE   &kp ENTER        &kp ENTER  &kp LSHFT  &mo 1      &kp LCTRL        &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F12     &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &kp F11
&trans      &kp CARET        &kp PIPE        &kp AMPS         &kp UNDER        &kp DLLR           &mmv MOVE_DOWN   &kp PG_UP        &kp PG_DN        &tildsl     &sprlab    &trans            &kp RBKT
&kp CAPS    &kp EQUAL        &kp EXCL        &mt RBRC LBRC    &mt RPAR LPAR    &kp MINUS          &mmv MOVE_LEFT   &kp LEFT         &kp DOWN         &kp UP      &kp RIGHT  &kp COLON         &trans
&trans      &kp HASH         &kp AT          &kp PRCNT        &kp STAR         &kp PLUS           &mmv MOVE_RIGHT  &kp HOME         &kp END          &trans      &trans     &kp BSLH          &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&none   &none       &none           &none       &none       &none      &none   &none   &none   &none   &none   &none   &none 
&none   &none       &kp N5          &kp N6      &kp N7      &kp N8     &none   &none   &none   &none   &none   &none   &none 
&none   &none       &kp N1          &kp N2      &kp N3      &kp N4     &none   &none   &none   &none   &none   &none   &none 
&none   &none       &kp DOWN        &kp UP      &kp LS(LEFT)&none      &none   &none   &none   &none   &none   &none   &none 
&trans  &trans      &trans          &trans      &trans      &trans     &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp F12         &kp F1          &kp F2          &kp F3          &kp F4          &kp F5            &none           &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
&none           &kp HOME        &kp UP          &kp END         &kp PG_UP       &kp PG_DN         &none           &none           &kp N7          &kp N8          &kp N9          &none           &none         
&none           &kp LEFT        &kp DOWN        &kp RIGHT       &kp ENTER       &none             &none           &none           &kp N4          &kp N5          &kp N6          &none           &none         
&none           &none           &none           &none           &none           &none             &none           &none           &kp N1          &kp N2          &kp N3          &none           &none         
&trans          &trans          &trans          &trans          &trans          &trans            &trans          &trans          &kp N0          &trans          &trans          &trans         
            >;
        };

        layer_4 {
            bindings = <
&kp F12         &kp F1          &kp F2          &kp F3          &kp F4          &kp F5            &none           &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11      
&none           &none           &none           &none           &none           &none             &none           &none           &kp N7          &kp N8          &kp N9          &none           &none         
&none           &kp LA(TAB)     &kp LC(LS(TAB)) &kp LC(TAB)     &kp ENTER       &none             &none           &none           &kp N4          &kp N5          &kp N6          &none           &none         
&none           &none           &none           &none           &none           &none             &none           &none           &kp N1          &kp N2          &kp N3          &none           &none         
&trans          &trans          &trans          &trans          &trans          &trans            &trans          &trans          &kp N0          &trans          &trans          &trans         
            >;
        };
    };
};
